<?xml version="1.0" encoding="UTF-8"?>
<fmxmlsnippet type="FMObjectList">
  <Script includeInMenu="False" SiriShortcutVisible="False" runFullAccess="False" id="0" name="HTTP ( {request} )">
    <Step enable="True" id="0" name="# (comment)">
      <Text>PURPOSE: Send a Request To an API EndPoint</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Source: https://github.com/proofgeist/mfm-http</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>IMPORTANT: You must add any allowed non-standard headers into the CLEAN HEADERS section.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Success means the server responded. It still may respond with "Bad Request"</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Set $$ENV_DEBUG_HTTP to turn on logging</Text>
    </Step>
    <Step enable="False" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[False]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$$ENV_DEBUG_HTTP</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>@param request {object}</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .method {string} = A supported HTTP request method. (Defaults to GET when empty)</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .url {string} = The url to send the request to.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .query {object} = Name value pairs in JSON that serialize to what comes after the "?" in the url. (*1)</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .headers {object} = Value pairs to set headers. Example: {"Accept" ; "application/json" }</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .auth {object} = Basic auth object.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>    .user {string} = Basic auth user name.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>    .password {string} = Basic auth password.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .data {string} = The data to send. Only used with POST, PUT, PATCH. (*2)</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .options {object} = Script execution options. One or more of trace, duration or base64.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  *1: For nested querystrings you can use "|_" and "_|" for "[" and "]". Ex. customer[name] would be customer|_name_|</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  *2: For nested application/x-www-form-urlencoded data you can use "|_" and "_|" for "[" and "]". Ex. customer[name] would be customer|_name_|</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Example $request - Copy &amp; Paste as needed.</Text>
    </Step>
    <Step enable="False" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONSetElement ( "{}" ;
	[ "method" ; "GET/POST/PUT/PATCH/DELETE" ; JSONString ];
	[ "url" ; "some_value" ; JSONString ];
	[ "query" ; "{}" ; JSONObject ];
	[ "headers" ; "{}" ; JSONObject ];
	[ "auth" ; "{}" ; JSONObject ];
	[ "data" ; "" ; JSONString ]
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$request</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>@returnSuccess response {object}</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .code {number} = The http status code. (e.g. 200, 403)</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .status {string} = The http status message.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .headers {object} = The reponse headers.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .trace {object} = The request trace if request.options.trace = true.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .duration {object} = The request duration if request.options.duration = true.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .body {*} = The response body.</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>@returnError error {object}</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .errorCode {number}</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  .{...} {object}</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="False" id="0" name="Insert Text">
      <SelectAll state="True"/>
      <Text>ADDITIONAL DOCUMENTATION&#13;&#13;# @history&#13;#   v1.5 major refactor 11/12/2018 - todd@geistinteractive.com - based on Generator 1 version&#13;#   v1.6 handles binary, and form data, also handles 100 status codes&#13;#   v1.6.1 fixes empty headers bug&#13;#   v1.6.2 fixes empty headers bug for real&#13;#   v1.6.4 fixes basic auth space in user name issue&#13;#   v1.7.0 adds nested form fields using application/x-www-form-urlencoded&#13;#   v1.8.0 adds options for trace and duration&#13;#   v1.9.0 revised and updated with header filtering matt@filemakermagazine.com&#13;</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>@license MIT</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Set Error Capture">
      <Set state="True"/>
    </Step>
    <Step enable="True" id="0" name="Allow User Abort">
      <Set state="False"/>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$error</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  PARSE PARAMETERS</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Get (ScriptParameter)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$request</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[IsEmpty ( $request )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Exit Script"/>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $request; "method" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$method</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement($request; "url" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$url</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement($request; "data" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$data</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement($request; "query" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$query</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement($request; "headers" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$headers</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement( $request  ; "auth")]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$auth</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetAsBoolean( JSONGetElement( $request  ; "dataQuoted") )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$dataQuoted</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Let ( [ ~values = JSONGetElement( $request  ; "options")
];
	If ( not IsEmpty ( ~values ) ; ~values ; "{}" )
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$options</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text> CLEAN HEADERS</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>https://en.wikipedia.org/wiki/List_of_HTTP_header_fields</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>https://www.rfc-editor.org/rfc/rfc9110.html#fields</Text>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[not IsEmpty ( $headers )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Insert Text">
      <SelectAll state="True"/>
      <Text>A-IM&#13;Accept&#13;Accept-Charset&#13;Accept-Datetime&#13;Accept-Encoding&#13;Accept-Language&#13;Access-Control-Request-Method&#13;Access-Control-Request-Headers&#13;Authorization&#13;Cache-Control&#13;Connection&#13;Content-Encoding&#13;Content-Length&#13;Content-Type&#13;Cookie&#13;Date&#13;Expect&#13;Forwarded&#13;From&#13;Host&#13;If-Match&#13;If-Modified-Since&#13;If-None-Match&#13;If-Range&#13;If-Unmodified-Since&#13;Max-Forwards&#13;Origin&#13;Pragma&#13;Prefer&#13;Proxy-Authorization&#13;Range&#13;Referer&#13;TE&#13;Trailer&#13;Transfer-Encoding&#13;User-Agent&#13;Upgrade&#13;Via</Text>
      <Field>$httpStandardHeaders</Field>
    </Step>
    <Step enable="True" id="0" name="Insert Text">
      <SelectAll state="True"/>
      <Text>Correlation-ID&#13;DNT&#13;Front-End-Https&#13;Proxy-Connection&#13;Save-Data&#13;Sec-GPC&#13;Upgrade-Insecure-Requests&#13;X-Authorization&#13;X-ATT-DeviceId&#13;X-Correlation-ID&#13;X-Csrf-Token&#13;X-Forwarded-For&#13;X-Forwarded-Host&#13;X-Forwarded-Proto&#13;X-Http-Method-Override&#13;X-Request-ID&#13;X-Requested-With&#13;X-UIDH&#13;X-Wap-Profile</Text>
      <Field>$httpNonStandardHeaders</Field>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[While ( [
		~i = 0;
		~original = $headers;
		~updated = "{}";
		~headerList = $httpStandardHeaders &¶ & $httpNonStandardHeaders;
		~keys = JSONListKeys ( ~original ; "." );
		~debug = ""
	]; 
		~i < ValueCount ( ~headerList ) ;
	[
		~i = ~i + 1;
		~header = GetValue ( ~headerList ; ~i );
		~exists = GetAsBoolean ( Position ( ¶ & ~keys & ¶ ; ¶ & ~header & ¶ ; 1 ; 1 ) );
		~lowerKey = Lower ( ~header );
		~upperKey = Upper ( ~header );
		~lowerValue = JSONGetElement ( ~original ; ~lowerKey );
		~upperValue = JSONGetElement ( ~original ; ~upperKey );
		~matchingValue = JSONGetElement ( ~original ; ~header );
		~updated = Case (
						// Empty value
						~exists and IsEmpty ( ~lowerValue ) and IsEmpty ( ~upperValue ) and IsEmpty ( ~matchingValue );
							JSONSetElement ( ~updated ; ~header ;
								~matchingValue;
								JSONGetElementType ( ~original ; ~header )
							);

						// Proper matching keys.
						~exists and not IsEmpty ( ~matchingValue );
							JSONSetElement ( ~updated ; ~header ;
								~matchingValue;
								JSONGetElementType ( ~original ; ~matchingValue )
							);

						// Lower case keys.
						~exists and not IsEmpty ( ~lowerValue );
							JSONSetElement ( ~updated ; ~header ;
								~lowerValue;
								JSONGetElementType ( ~original ; ~lowerKey )
							);

						// Upper case keys.
						~exists and not IsEmpty ( ~upperValue );
							JSONSetElement ( ~updated ; ~header ;
								~upperValue ;
								JSONGetElementType ( ~original ; ~upperKey )
							);

						// Pass through results.
						~updated
					);

		// Used for debugging.
		~debug = List ( ~debug ; ~header & "->" &~exists )
	];
		~updated
)

/*
This loop uses the supplied allowed
header lists and converts any lower
or upper, but not mixed case headers
into a fixed version. HTTP headers
are case-insensitive but JSON is not.
*/]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$updated</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[ValueCount ( JSONListKeys ( $headers ; "." ) ) = ValueCount ( JSONListKeys ( $updated ; "." ) )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$cleanSuccess</Name>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[not $cleanSuccess]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONSetElement( $responseJSON ; 
       [ "code" ; -1 ; JSONNumber ];
       [ "status" ; "Expected header is missing" ; JSONString ]

 )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseJSON</Name>
    </Step>
    <Step enable="True" id="0" name="Exit Script">
      <Calculation><![CDATA[$responseJSON]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Else"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[$updated]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$headers</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text> HANDLE QUERY</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[not IsEmpty ( $query )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONListKeys ( $query ; "" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$paramList</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[1]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$n</Name>
    </Step>
    <Step enable="True" id="0" name="Loop"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetValue ( $paramList ; $n )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$param</Name>
    </Step>
    <Step enable="True" id="0" name="Exit Loop If">
      <Calculation><![CDATA[IsEmpty( $param )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[List(
	$queryStringList ;
	$param & "=" & GetAsURLEncoded ( JSONGetElement ( $query ; $param ) )
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$queryStringList</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[$n + 1]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$n</Name>
    </Step>
    <Step enable="True" id="0" name="End Loop"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Substitute ( $queryStringList ;  "¶";  "&" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$queryString</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Substitute ( $querystring ; ["|_"; "[" ] ; ["_|"; "]" ] )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$querystring</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[not IsEmpty ( $queryString )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[$url & "?" & $queryString]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$url</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  HANDLE DATA</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $headers ; "Content-Type" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$contentType</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[$contentType = "application/octet-stream"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>----</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Pure Binary</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>----</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>There are 3 ways to pass container data as JSON, base64 is MUCH slower than the others on large files.</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $data ; "fileName" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$name</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $data ; "base64" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$base64</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $data ; "varRef" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$varRef</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $data ; "fieldRef" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$fieldRef</Name>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[not IsEmpty ($base64)]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>This is required.</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $data ; "name" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$name</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Base64Decode ( $base64; $name  )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$BinaryFile</Name>
    </Step>
    <Step enable="True" id="0" name="Else If">
      <Calculation><![CDATA[not IsEmpty ($varRef) and Left($varRef;1) = "$"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>@Todo - Sanitize evaluate.</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Evaluate($varRef)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$BinaryFile</Name>
    </Step>
    <Step enable="True" id="0" name="Else If">
      <Calculation><![CDATA[not IsEmpty ($fieldRef)]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetField($fieldRef)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$BinaryFile</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Char(45) & Char(45) & "data-binary @$BinaryFile"]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$dataString</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Else If">
      <Calculation><![CDATA[$contentType = "multipart/form-data"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>----</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>MultiPart Form</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>----</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[True]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$multiPartFormData</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONListValues ( $Data ; "parts" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$parts</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[1]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$n</Name>
    </Step>
    <Step enable="True" id="0" name="Loop"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetValue ( $parts ; $n )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$part</Name>
    </Step>
    <Step enable="True" id="0" name="Exit Loop If">
      <Calculation><![CDATA[IsEmpty( $part )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $part; "body" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$partBody</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $part ; "Content-Type" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$type</Name>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[IsEmpty ( $type )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $part ; "ContentType" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$type</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $part ; "fileName" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$filename</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[$type="application/json"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Part is application json.</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Let( [
	~s = Quote ( $partBody );
	~l = Length ( ~s )
];
	Middle ( ~s ; 2 ; ~l - 2 )
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$partBody</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[List(
	$partsString;
	"-F \"" & JSONGetElement ( $part; "name" ) & "=" & $partBody & ";" & "type=application/json\""
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$partsString</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Else If">
      <Calculation><![CDATA[not IsEmpty ( $fileName )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Part is binary.</Text>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[Length ( $partBody ) > 1000 // We're assuming base64.]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Base64Decode ( $partBody ; $fileName )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[$n]]></Calculation>
      </Repetition>
      <Name>$file</Name>
    </Step>
    <Step enable="True" id="0" name="Else If">
      <Calculation><![CDATA[Left ( $partBody ; 1 ) = "$"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Dollar sign assumes $var or $$VAR</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>@Todo - Sanitize evaluate.</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Evaluate ( $partBody )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[$n]]></Calculation>
      </Repetition>
      <Name>$file</Name>
    </Step>
    <Step enable="True" id="0" name="Else"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Field</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetField ( $partBody )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[$n]]></Calculation>
      </Repetition>
      <Name>$file</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA["@$file[" & $n & "]"]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$partBody</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[List(
	$partsString;
	"-F \"" & JSONGetElement ( $part; "name" ) & "=" & $partBody & ";" & "type=" & $type & ";filename=" & $fileName & "\""
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$partsString</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Else"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>All other types.</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[List (
	$partsString;
	"-F \"" & JSONGetElement ( $part; "name" ) & "=" & $partBody & ";" & "type=" &  $type & "\""
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$partsString</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[$n + 1]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$n</Name>
    </Step>
    <Step enable="True" id="0" name="End Loop"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Substitute ( $partsString ; "¶" ; " " )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$dataString</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Else If">
      <Calculation><![CDATA[$contentType = "application/x-www-form-urlencoded"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[not IsEmpty ( $data )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONListKeys ( $data ; "")]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$paramList</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[1]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$n</Name>
    </Step>
    <Step enable="True" id="0" name="Loop"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetValue ( $paramList ; $n )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$param</Name>
    </Step>
    <Step enable="True" id="0" name="Exit Loop If">
      <Calculation><![CDATA[IsEmpty( $param )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement( $data ; $param )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$value</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Substitute ( $param ; ["|_"; "[" ] ; ["_|"; "]" ] )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$param</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[List (
	$queryStringList;
	$param & "=" & GetAsURLEncoded ( $value )
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$queryStringList</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[$n + 1]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$n</Name>
    </Step>
    <Step enable="True" id="0" name="End Loop"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Substitute ( $queryStringList ; "¶" ; "&" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$queryString</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA["-d \"" & $queryString & "\""]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$dataString</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Else"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Some APIs need ordered properties, since most JSON parsers can't guarentee that, we need to treat it as a string.</Text>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[not IsEmpty ( $Data ) and $dataQuoted]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Evaluate ( $data )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$data</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[not IsEmpty ( $data )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Char(45) & Char(45) & "data-raw " & Quote ( $data )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$dataString</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  HANDLE HEADERS</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Fixed #20</Text>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[not IsEmpty ( $headers )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONListKeys ( $headers ; "" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$headerList</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[1]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$n</Name>
    </Step>
    <Step enable="True" id="0" name="Loop"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetValue ( $headerList ; $n )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$header</Name>
    </Step>
    <Step enable="True" id="0" name="Exit Loop If">
      <Calculation><![CDATA[IsEmpty( $header )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[List (
	$headerString;
	"-H \"" & $header & ": "  & JSONGetElement ( $headers ; $header ) & "\""
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$headerString</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[$n + 1]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$n</Name>
    </Step>
    <Step enable="True" id="0" name="End Loop"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Substitute ( $headerString ; "¶" ; " " )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$headerString</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $headers ; "Accept" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$acceptHeader</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[$acceptHeader = "application/octet-stream"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA["--FM-return-container-variable"]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$cURLContainerOptions</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  HANDLE AUTHENTICATION</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[not IsEmpty ( $auth )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement( $auth ; "user")]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$userName</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement( $auth ; "password")]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$password</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA["-u \"" & $userName & ":" & $password & "\""]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$authString</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  HANDLE METHOD</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $request ; "method" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$method</Name>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[IsEmpty ( $method )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA["GET"]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$method</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA["-X " & $method]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$methodString</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  HANDLE OPTIONS</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Let ( ~enableTrace = GetAsBoolean ( JSONGetElement ( $options  ; "trace" ) ); 
	Case (
		~enableTrace;
			" --trace-ascii $traceASCII";

		""
	)
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$trace</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Let ( ~enableDuration = GetAsBoolean ( JSONGetElement ( $options  ; "duration" ) );
	Case (
		~enableDuration;
			~enableDuration;

		""
	)
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$duration</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $options ; "base64" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$returnBase64</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  SET cURL OPTIONS</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Do Not Use show Error --show-error</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA["--dump-header $responseHeaders"]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$fmOptions</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[$methodString & " " & 
$headerString & " " & 
$authString & " " & 
$dataString & " " & 
$fmOptions & " " &
$cURLContainerOptions & " " &
$trace]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$curlOptions</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  EXECUTE HTTP</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>Fixed #22</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Get ( CurrentTimeUTCMilliseconds )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$timerStart</Name>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[Let ( ~scheme = "https:" ; If ( Left ( $url ; Length ( ~scheme ) ) = ~scheme ; True ; False ) )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Insert from URL">
      <NoInteract state="True"/>
      <DontEncodeURL state="False"/>
      <SelectAll state="True"/>
      <VerifySSLCertificates state="True"/>
      <CURLOptions>
        <Calculation><![CDATA[$curlOptions]]></Calculation>
      </CURLOptions>
      <Calculation><![CDATA[$url]]></Calculation>
      <Text/>
      <Field>$responseBody</Field>
    </Step>
    <Step enable="True" id="0" name="Else"/>
    <Step enable="True" id="0" name="Insert from URL">
      <NoInteract state="True"/>
      <DontEncodeURL state="False"/>
      <SelectAll state="True"/>
      <VerifySSLCertificates state="False"/>
      <CURLOptions>
        <Calculation><![CDATA[$curlOptions]]></Calculation>
      </CURLOptions>
      <Calculation><![CDATA[$url]]></Calculation>
      <Text/>
      <Field>$responseBody</Field>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Get ( CurrentTimeUTCMilliseconds ) - $timerStart & " ms"]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$timerDuration</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Get (LastError)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$error</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Let( [
	~r = $responseHeaders;
	~c = PatternCount ( ~r; "HTTP/" );
	~pstart = Position ( ~r; "HTTP/" ; 1 ; ~c )
];
	Middle ( ~r; ~pstart ; 10000000 )
)

// Handles 100 continue, by getting only the last response.]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseHeaders</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetValue ( $responseHeaders ; 1 )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseLine1</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Let( [
	~line = $responseLine1;
	~split = Substitute ( ~line ; " " ; "¶" );
	~code = GetAsNumber ( GetValue ( ~split ; 2 ) )
];
	JSONSetElement ( "{}" ;
		["message"; ~line; JSONString ];
		["code"; ~code; JSONNumber ]
	)
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$status</Name>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[$error = 1631 // Connection failed]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[JSONGetElement ( $status ; "code"  ) = 0]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONSetElement( $responseJSON ; 
       [ "code" ; 0 ; JSONNumber ];
       [ "status" ; "Insert From URL Failed with error: " & $error & ". " & Get ( LastErrorDetail ) ; JSONString ]

 )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseJSON</Name>
    </Step>
    <Step enable="True" id="0" name="Exit Script">
      <Calculation><![CDATA[$responseJSON]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  HANDLE RESPONSE HEADERS</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetAsBoolean ( RightWords ( $responseLine1 ; 1 ) = "OK" ) // 👍]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$isOK</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[2 // Start on second line.]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$h</Name>
    </Step>
    <Step enable="True" id="0" name="Loop"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetValue ( $responseHeaders ; $h )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$headerLine</Name>
    </Step>
    <Step enable="True" id="0" name="Exit Loop If">
      <Calculation><![CDATA[IsEmpty ( $headerLine )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Let( [
	~headerLine = $headerLine;
	~p = Position ( ~headerLine ; ":" ; 1 ; 1 );
	$name = Left ( ~headerLine ; ~p-1 );
	~value = Middle ( ~headerLine ; ~p + 1 ; 10000 );
	$value = Trim ( ~value )
];
	~value
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$split</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[""]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$jsonType</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONSetElement ( $responseHeadersJSON ; $name ; $value ; $jsonType )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseHeadersJSON</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[$h + 1]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$h</Name>
    </Step>
    <Step enable="True" id="0" name="End Loop"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>  HANDLE RESPONSE BODY</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Let( [
	~contentType = JSONGetElement ( $responseHeadersJSON ; "Content-Type" );
	~contentType = If ( IsEmpty ( ~contentType ) ; JSONGetElement ( $responseHeadersJSON ; "content-type" ) ; ~contentType );
	~contentType = If ( IsEmpty ( ~contentType ) ; JSONGetElement ( $responseHeadersJSON ; "content-Type" ) ; ~contentType );
	~contentType = If ( IsEmpty ( ~contentType ) ; JSONGetElement ( $responseHeadersJSON ; "Content-type" ) ; ~contentType )
];
	~contentType
)

// Handle various spellings.]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$contentType</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[GetValue ( Substitute ( $contentType ; ";" ; "¶" ) ; 1 )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$contentType</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONString]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseBodyType</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[$contentType = "application/json" or $contentType = "text/javascript"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $responseBody ; "" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseBody</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Left ( $responseBody ; 1 ) & Right ( $responseBody ; 1 )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$enclosingChars</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[$enclosingChars = "{}"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONObject]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseBodyType</Name>
    </Step>
    <Step enable="True" id="0" name="Else If">
      <Calculation><![CDATA[$enclosingChars = "[]"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONArray]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseBodyType</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Else If">
      <Calculation><![CDATA[$contentType = "application/octet-stream"]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONObject]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseBodyType</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONGetElement ( $responseHeadersJSON  ; "Content-Disposition" )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$contentDisposition</Name>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[PatternCount ( $contentDisposition ; "attachment;" )]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[$returnBase64]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Evaluate ( GetValue ( Substitute ( $contentDisposition ; "fileName=" ; "¶" ) ; 2 ) )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$fileName</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[Base64EncodeRFC ( 4648 ; $responseBody )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$base64</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONSetElement ( "{}" ; 

[  "fileName" ; $fileName ;  JSONString ];
[  "base64" ; $base64 ; "" ]

)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseBody</Name>
    </Step>
    <Step enable="True" id="0" name="Else"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[$responseBody]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$$httpResponseContainer</Name>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONSetElement ( "{}" ; 
	[ "variableName" ; "$$httpResponseContainer" ;  JSONString ]
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseBody</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text> PACKAGE RESPONSE</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONSetElement ( "{}" ;
	[ "status" ; JSONGetElement ( $status ; "message"); "" ]; // @fix? Why empty string.
	[ "code" ; JSONGetElement ( $status ; "code" ) ; JSONNumber ];
	[ "headers" ; $responseHeadersJSON ; JSONObject ];
	[ "body" ; $responseBody ; $responseBodyType ]
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseJSON</Name>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[$duration <> 0]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONSetElement( $responseJSON ; "duration" ; $timerDuration ; JSONString )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseJSON</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[$trace <> 0]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONSetElement( $responseJSON ; "trace" ; $traceASCII ; JSONString )]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$responseJSON</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)">
      <Text>--------------------------------------------------------------------------------------------</Text>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="If">
      <Calculation><![CDATA[$$ENV_DEBUG_HTTP]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[JSONSetElement ( "{}" ;
	["request" ; $request ; JSONObject ];
	["curl.opts" ; $curlOptions ; JSONString ];
	["curl.url" ; $url ; JSONString ];
	["response" ; $responseJSON ; JSONObject ]
)]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$$HTTP_LOG</Name>
    </Step>
    <Step enable="True" id="0" name="Else"/>
    <Step enable="True" id="0" name="Set Variable">
      <Value>
        <Calculation><![CDATA[""]]></Calculation>
      </Value>
      <Repetition>
        <Calculation><![CDATA[1]]></Calculation>
      </Repetition>
      <Name>$$HTTP_LOG</Name>
    </Step>
    <Step enable="True" id="0" name="End If"/>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Perform Script">
      <Calculation><![CDATA[JSONSetElement ( "";

["fileName"; "response.json"; JSONString];
["contents"; $responseJSON; ""]


)]]></Calculation>
      <Script id="0" name="_File Log"/>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
    <Step enable="True" id="0" name="Exit Script">
      <Calculation><![CDATA[$responseJSON]]></Calculation>
    </Step>
    <Step enable="True" id="0" name="# (comment)"/>
  </Script>
</fmxmlsnippet>